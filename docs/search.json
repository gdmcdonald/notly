[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 notly authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gordon McDonald. Author, maintainer. Henry Lydecker. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"McDonald G, Lydecker H (2022). notly: Reversible ggplot plotly conversion. R package version 0.1.","code":"@Manual{,   title = {notly: Reversible ggplot to plotly conversion},   author = {Gordon McDonald and Henry Lydecker},   year = {2022},   note = {R package version 0.1}, }"},{"path":"/index.html","id":"notly","dir":"","previous_headings":"","what":"Reversible ggplot to plotly conversion","title":"Reversible ggplot to plotly conversion","text":"Adds ability turn ggplotly object plot back ggplot Plotly R Circle Notly Notly following functions: notly::ggplotly() override plotly::ggplotly() adding ggplot object output plotly object. notly::notly() basically inverse function plotly::ggplotly(), .e. extracts ggplot object back plotly object. way ’ve saved interactive plotly object can recover ggplot static output e.g. pdf! Installation: Example usage:","code":"# install.packages(\"devtools\") devtools::install_github(\"gdmcdonald/notly\") library(ggplot2) library(plotly) library(notly)  data(iris)  # Create a ggplot ggplot_object <-   iris %>%   ggplot(aes(x = Sepal.Length,                 y = Sepal.Width,                 color = Species))+       geom_point()  # Create a plotly object - but with the ggplot hiding inside of it as well notly_obj <- ggplot_object %>%   ggplotly  notly_obj  # Extract the ggplot again ggplot_obj_again <-   notly_obj %>%   notly    ggplot_obj_again"},{"path":"/reference/ggplotly.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert ggplot2 to notly (plotly with embedded ggplot) — ggplotly","title":"Convert ggplot2 to notly (plotly with embedded ggplot) — ggplotly","text":"function converts ggplot2::ggplot() object notly object. original ggplot object retained inside new plotly object. makes conversion reversible, allowing freely go back forth betweeen ggplot plotly.","code":""},{"path":"/reference/ggplotly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert ggplot2 to notly (plotly with embedded ggplot) — ggplotly","text":"","code":"ggplotly(   p = ggplot2::last_plot(),   width = NULL,   height = NULL,   tooltip = \"all\",   dynamicTicks = FALSE,   layerData = 1,   originalData = TRUE,   source = \"A\",   ... )"},{"path":"/reference/ggplotly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert ggplot2 to notly (plotly with embedded ggplot) — ggplotly","text":"p ggplot object. width Width plot pixels (optional, defaults automatic sizing). height Height plot pixels (optional, defaults automatic sizing). tooltip character vector specifying aesthetic mappings show tooltip. default, \"\", means show aesthetic mappings (including unofficial \"text\" aesthetic). order variables also control order appear. example, use tooltip = c(\"y\", \"x\", \"colour\") want y first, x second, colour last. dynamicTicks plotly.js dynamically generate axis tick labels? Dynamic ticks useful updating ticks response zoom/pan interactions; however, can always reproduce labels appear static ggplot2 image. layerData data layer returned? originalData \"original\" \"scaled\" data returned? source character string length 1. Match value string source argument event_data() retrieve event data corresponding specific plot (shiny apps can multiple plots). ... arguments passed onto methods.","code":""},{"path":"/reference/ggplotly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert ggplot2 to notly (plotly with embedded ggplot) — ggplotly","text":"Plotly object ggplot nested inside","code":""},{"path":"/reference/ggplotly.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert ggplot2 to notly (plotly with embedded ggplot) — ggplotly","text":"Conversion relative sizes depends size current graphics device (device open, width/height new (-screen) device defaults 640/480). words, height width must specified runtime ensure sizing correct. examples specify output container's height/width shiny app, see plotly_example(\"shiny\", \"ggplotly_sizing\").","code":""},{"path":"/reference/ggplotly.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert ggplot2 to notly (plotly with embedded ggplot) — ggplotly","text":"https://plotly.com/ggplot2/","code":""},{"path":[]},{"path":"/reference/ggplotly.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Convert ggplot2 to notly (plotly with embedded ggplot) — ggplotly","text":"Carson Sievert","code":""},{"path":"/reference/ggplotly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert ggplot2 to notly (plotly with embedded ggplot) — ggplotly","text":"","code":"if (FALSE) { # simple example ggpenguins <- qplot(bill_length_mm , body_mass_g, data = palmerpenguins::penguins, color = species) ggplotly(ggpenguins)  data(canada.cities, package = \"maps\") viz <- ggplot(canada.cities, aes(long, lat)) +   borders(regions = \"canada\") +   coord_equal() +   geom_point(aes(text = name, size = pop), colour = \"red\", alpha = 1/2) ggplotly(viz, tooltip = c(\"text\", \"size\"))  # linked scatterplot brushing d <- highlight_key(mtcars) qplot(data = d, x = mpg, y = wt) %>%   subplot(qplot(data = d, x = mpg, y = vs)) %>%   layout(title = \"Click and drag to select points\") %>%   highlight(\"plotly_selected\")   # more brushing (i.e. highlighting) examples demo(\"crosstalk-highlight-ggplotly\", package = \"plotly\")  # client-side linked brushing in a scatterplot matrix highlight_key(palmerpenguins::penguins) %>%   GGally::ggpairs(aes(colour = Species), columns = 1:4) %>%   ggplotly(tooltip = c(\"x\", \"y\", \"colour\")) %>%   highlight(\"plotly_selected\") }"},{"path":"/reference/notly.html","id":null,"dir":"Reference","previous_headings":"","what":"Turn a notly back into a ggplot object — notly","title":"Turn a notly back into a ggplot object — notly","text":"function takes notly object (plotly embedded ggplot) turns ggplot object. inverse function ggplotly(), allowing freely go back forth betweeen ggplot plotly.","code":""},{"path":"/reference/notly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turn a notly back into a ggplot object — notly","text":"","code":"notly(notly_object)"},{"path":"/reference/notly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turn a notly back into a ggplot object — notly","text":"notly_object notly object","code":""},{"path":"/reference/notly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turn a notly back into a ggplot object — notly","text":"ggplot object","code":""}]
